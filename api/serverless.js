"use strict";var b=Object.create;var c=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var E=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var p=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports),w=(e,n)=>{for(var o in n)c(e,o,{get:n[o],enumerable:!0})},f=(e,n,o,t)=>{if(n&&typeof n=="object"||typeof n=="function")for(let r of h(n))!y.call(e,r)&&r!==o&&c(e,r,{get:()=>n[r],enumerable:!(t=j(n,r))||t.enumerable});return e};var _=(e,n,o)=>(o=e!=null?b(E(e)):{},f(n||!e||!e.__esModule?c(o,"default",{value:e,enumerable:!0}):o,e)),$=e=>f(c({},"__esModule",{value:!0}),e);var u=p((k,S)=>{S.exports={name:"dotenv",version:"16.0.3",description:"Loads environment variables from .env file",main:"lib/main.js",types:"lib/main.d.ts",exports:{".":{require:"./lib/main.js",types:"./lib/main.d.ts",default:"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},scripts:{"dts-check":"tsc --project tests/types/tsconfig.json",lint:"standard","lint-readme":"standard-markdown",pretest:"npm run lint && npm run dts-check",test:"tap tests/*.js --100 -Rspec",prerelease:"npm test",release:"standard-version"},repository:{type:"git",url:"git://github.com/motdotla/dotenv.git"},keywords:["dotenv","env",".env","environment","variables","config","settings"],readmeFilename:"README.md",license:"BSD-2-Clause",devDependencies:{"@types/node":"^17.0.9",decache:"^4.6.1",dtslint:"^3.7.0",sinon:"^12.0.1",standard:"^16.0.4","standard-markdown":"^7.1.0","standard-version":"^9.3.2",tap:"^15.1.6",tar:"^6.1.11",typescript:"^4.5.4"},engines:{node:">=12"}}});var m=p((K,l)=>{var q=require("fs"),v=require("path"),A=require("os"),O=u(),x=O.version,I=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function B(e){let n={},o=e.toString();o=o.replace(/\r\n?/mg,`
`);let t;for(;(t=I.exec(o))!=null;){let r=t[1],s=t[2]||"";s=s.trim();let i=s[0];s=s.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),i==='"'&&(s=s.replace(/\\n/g,`
`),s=s.replace(/\\r/g,"\r")),n[r]=s}return n}function d(e){console.log(`[dotenv@${x}][DEBUG] ${e}`)}function N(e){return e[0]==="~"?v.join(A.homedir(),e.slice(1)):e}function R(e){let n=v.resolve(process.cwd(),".env"),o="utf8",t=!!(e&&e.debug),r=!!(e&&e.override);e&&(e.path!=null&&(n=N(e.path)),e.encoding!=null&&(o=e.encoding));try{let s=a.parse(q.readFileSync(n,{encoding:o}));return Object.keys(s).forEach(function(i){Object.prototype.hasOwnProperty.call(process.env,i)?(r===!0&&(process.env[i]=s[i]),t&&d(r===!0?`"${i}" is already defined in \`process.env\` and WAS overwritten`:`"${i}" is already defined in \`process.env\` and was NOT overwritten`)):process.env[i]=s[i]}),{parsed:s}}catch(s){return t&&d(`Failed to load ${n} ${s.message}`),{error:s}}}var a={config:R,parse:B};l.exports.config=a.config;l.exports.parse=a.parse;l.exports=a});var D={};w(D,{default:()=>C});module.exports=$(D);var g=_(m());(0,g.config)();var C=async(e,n)=>{let{GITHUB_ACCESS_TOKEN:o,OPENAI_API_KEY:t}=process.env;if(!o){console.error("`GITHUB_ACCESS_TOKEN` is not defined.");return}if(!t){console.error("`OPENAI_API_KEY` is not defined.");return}n.json({hello:"world"})};
