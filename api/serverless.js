"use strict";var j=Object.create;var c=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var E=Object.getPrototypeOf,_=Object.prototype.hasOwnProperty;var p=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports),w=(e,n)=>{for(var o in n)c(e,o,{get:n[o],enumerable:!0})},f=(e,n,o,r)=>{if(n&&typeof n=="object"||typeof n=="function")for(let t of h(n))!_.call(e,t)&&t!==o&&c(e,t,{get:()=>n[t],enumerable:!(r=y(n,t))||r.enumerable});return e};var $=(e,n,o)=>(o=e!=null?j(E(e)):{},f(n||!e||!e.__esModule?c(o,"default",{value:e,enumerable:!0}):o,e)),S=e=>f(c({},"__esModule",{value:!0}),e);var u=p((P,q)=>{q.exports={name:"dotenv",version:"16.0.3",description:"Loads environment variables from .env file",main:"lib/main.js",types:"lib/main.d.ts",exports:{".":{require:"./lib/main.js",types:"./lib/main.d.ts",default:"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},scripts:{"dts-check":"tsc --project tests/types/tsconfig.json",lint:"standard","lint-readme":"standard-markdown",pretest:"npm run lint && npm run dts-check",test:"tap tests/*.js --100 -Rspec",prerelease:"npm test",release:"standard-version"},repository:{type:"git",url:"git://github.com/motdotla/dotenv.git"},keywords:["dotenv","env",".env","environment","variables","config","settings"],readmeFilename:"README.md",license:"BSD-2-Clause",devDependencies:{"@types/node":"^17.0.9",decache:"^4.6.1",dtslint:"^3.7.0",sinon:"^12.0.1",standard:"^16.0.4","standard-markdown":"^7.1.0","standard-version":"^9.3.2",tap:"^15.1.6",tar:"^6.1.11",typescript:"^4.5.4"},engines:{node:">=12"}}});var v=p((F,a)=>{var A=require("fs"),m=require("path"),O=require("os"),x=u(),I=x.version,B=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function N(e){let n={},o=e.toString();o=o.replace(/\r\n?/mg,`
`);let r;for(;(r=B.exec(o))!=null;){let t=r[1],s=r[2]||"";s=s.trim();let i=s[0];s=s.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),i==='"'&&(s=s.replace(/\\n/g,`
`),s=s.replace(/\\r/g,"\r")),n[t]=s}return n}function d(e){console.log(`[dotenv@${I}][DEBUG] ${e}`)}function R(e){return e[0]==="~"?m.join(O.homedir(),e.slice(1)):e}function C(e){let n=m.resolve(process.cwd(),".env"),o="utf8",r=!!(e&&e.debug),t=!!(e&&e.override);e&&(e.path!=null&&(n=R(e.path)),e.encoding!=null&&(o=e.encoding));try{let s=l.parse(A.readFileSync(n,{encoding:o}));return Object.keys(s).forEach(function(i){Object.prototype.hasOwnProperty.call(process.env,i)?(t===!0&&(process.env[i]=s[i]),r&&d(t===!0?`"${i}" is already defined in \`process.env\` and WAS overwritten`:`"${i}" is already defined in \`process.env\` and was NOT overwritten`)):process.env[i]=s[i]}),{parsed:s}}catch(s){return r&&d(`Failed to load ${n} ${s.message}`),{error:s}}}var l={config:C,parse:N};a.exports.config=l.config;a.exports.parse=l.parse;a.exports=l});var T={};w(T,{default:()=>D});module.exports=S(T);var g=$(v());(0,g.config)();var D=async(e,n)=>{let{GITHUB_ACCESS_TOKEN:o,OPENAI_API_KEY:r}=process.env;if(!o){console.error("`GITHUB_ACCESS_TOKEN` is not defined.");return}if(!r){console.error("`OPENAI_API_KEY` is not defined.");return}n.json({hello:"world"});let{action:t,number:s,pull_request:i,repository:b,sender:k}=e.body;console.log(t,s,b.full_name)};
